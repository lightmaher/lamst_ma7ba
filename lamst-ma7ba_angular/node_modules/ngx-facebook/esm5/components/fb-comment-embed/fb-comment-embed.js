import { __decorate, __extends } from "tslib";
import { Component, Input, ElementRef, Renderer2 } from '@angular/core';
import { FBMLAttribute, FBMLComponent } from '../fbml-component';
/**
 * @name Embedded Comments
 * @shortdesc Embedded comments component
 * @fbdoc https://developers.facebook.com/docs/plugins/embedded-comments
 * @description
 * Embedded comments are a simple way to put public post comments - by a Page or a person on Facebook - into the content of your web site or web page.
 * Only public comments from Facebook Pages and profiles can be embedded.
 * @usage
 * ```html
 * <fb-comment-embed href="https://www.facebook.com/zuck/posts/10102735452532991?comment_id=1070233703036185" width="500"></fb-comment-embed>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
var FBCommentEmbedComponent = /** @class */ (function (_super) {
    __extends(FBCommentEmbedComponent, _super);
    function FBCommentEmbedComponent(el, rnd) {
        return _super.call(this, el, rnd, 'fb-comment-embed') || this;
    }
    FBCommentEmbedComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input(),
        FBMLAttribute
    ], FBCommentEmbedComponent.prototype, "href", void 0);
    __decorate([
        Input(),
        FBMLAttribute
    ], FBCommentEmbedComponent.prototype, "width", void 0);
    __decorate([
        Input(),
        FBMLAttribute
    ], FBCommentEmbedComponent.prototype, "includeParent", void 0);
FBCommentEmbedComponent.ɵfac = function FBCommentEmbedComponent_Factory(t) { return new (t || FBCommentEmbedComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
FBCommentEmbedComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FBCommentEmbedComponent, selectors: [["fb-comment-embed"]], inputs: { href: "href", width: "width", includeParent: "includeParent" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function FBCommentEmbedComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FBCommentEmbedComponent, [{
        type: Component,
        args: [{
                selector: 'fb-comment-embed',
                template: ''
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { href: [{
            type: Input
        }], width: [{
            type: Input
        }], includeParent: [{
            type: Input
        }] }); })();
    return FBCommentEmbedComponent;
}(FBMLComponent));
export { FBCommentEmbedComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmItY29tbWVudC1lbWJlZC5qcyIsInNvdXJjZXMiOlsibmc6L25neC1mYWNlYm9vay9jb21wb25lbnRzL2ZiLWNvbW1lbnQtZW1iZWQvZmItY29tbWVudC1lbWJlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4RSxPQUFPLEVBQUUsYUFBYSxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWpFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUtIO0FBRUcsSUFGMEMsMkNBQWE7QUFBQyxJQXVCekQsaUNBQ0UsRUFBYyxFQUNkLEdBQWM7QUFDZixlQUNDLGtCQUFNLEVBQUUsRUFBRSxHQUFHLEVBQUUsa0JBQWtCLENBQUM7QUFJckMsSUFIQyxDQUFDO0FBQ0g7QUFFaUUsZ0JBUHpELFVBQVU7QUFDaEIsZ0JBQU8sU0FBUztBQUNoQjtBQUNJLElBcEJKO0FBQWEsUUFGWixLQUFLLEVBQUU7QUFDVCxRQUFFLGFBQWE7QUFDaEIseURBQWU7QUFFZixJQUtFO0FBQWEsUUFGWixLQUFLLEVBQUU7QUFDVCxRQUFFLGFBQWE7QUFDaEIsMERBQWdCO0FBRWhCLElBS0U7QUFBYSxRQUZaLEtBQUssRUFBRTtBQUNULFFBQUUsYUFBYTtBQUNoQixrRUFBeUI7SUFyQlosdUJBQXVCLHdCQUpuQyxTQUFTLENBQUMsY0FDVCxRQUFRLEVBQUUsa0JBQWtCLGNBQzVCLFFBQVEsRUFBRSxFQUFFLFVBQ2IsQ0FBQyxRQUNXLHVCQUF1QixDQThCbkM7Ozs7Ozs7Ozs7Ozs7O29CQUNEO0FBQUMsSUFERCw4QkFBQztBQUNBLENBREEsQUE5QkQsQ0FBNkMsYUFBYSxHQThCekQ7QUFDRCxTQS9CYSx1QkFBdUI7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRkJNTEF0dHJpYnV0ZSwgRkJNTENvbXBvbmVudCB9IGZyb20gJy4uL2ZibWwtY29tcG9uZW50JztcblxuLyoqXG4gKiBAbmFtZSBFbWJlZGRlZCBDb21tZW50c1xuICogQHNob3J0ZGVzYyBFbWJlZGRlZCBjb21tZW50cyBjb21wb25lbnRcbiAqIEBmYmRvYyBodHRwczovL2RldmVsb3BlcnMuZmFjZWJvb2suY29tL2RvY3MvcGx1Z2lucy9lbWJlZGRlZC1jb21tZW50c1xuICogQGRlc2NyaXB0aW9uXG4gKiBFbWJlZGRlZCBjb21tZW50cyBhcmUgYSBzaW1wbGUgd2F5IHRvIHB1dCBwdWJsaWMgcG9zdCBjb21tZW50cyAtIGJ5IGEgUGFnZSBvciBhIHBlcnNvbiBvbiBGYWNlYm9vayAtIGludG8gdGhlIGNvbnRlbnQgb2YgeW91ciB3ZWIgc2l0ZSBvciB3ZWIgcGFnZS5cbiAqIE9ubHkgcHVibGljIGNvbW1lbnRzIGZyb20gRmFjZWJvb2sgUGFnZXMgYW5kIHByb2ZpbGVzIGNhbiBiZSBlbWJlZGRlZC5cbiAqIEB1c2FnZVxuICogYGBgaHRtbFxuICogPGZiLWNvbW1lbnQtZW1iZWQgaHJlZj1cImh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS96dWNrL3Bvc3RzLzEwMTAyNzM1NDUyNTMyOTkxP2NvbW1lbnRfaWQ9MTA3MDIzMzcwMzAzNjE4NVwiIHdpZHRoPVwiNTAwXCI+PC9mYi1jb21tZW50LWVtYmVkPlxuICogYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2ZiLWNvbW1lbnQtZW1iZWQnLFxuICB0ZW1wbGF0ZTogJydcbn0pXG5leHBvcnQgY2xhc3MgRkJDb21tZW50RW1iZWRDb21wb25lbnQgZXh0ZW5kcyBGQk1MQ29tcG9uZW50IHtcblxuICAvKipcbiAgICogVGhlIGFic29sdXRlIFVSTCBvZiB0aGUgY29tbWVudC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIGhyZWY6IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHdpZHRoIG9mIHRoZSBlbWJlZGRlZCBjb21tZW50IGNvbnRhaW5lci4gTWluLiBgMjIwcHhgLiBEZWZhdWx0cyB0byBgNTYwcHhgLlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgd2lkdGg6IHN0cmluZztcblxuICAvKipcbiAgICogU2V0IHRvIGB0cnVlYCB0byBpbmNsdWRlIHBhcmVudCBjb21tZW50IChpZiBVUkwgaXMgYSByZXBseSkuIERlZmF1bHRzIHRvIGBmYWxzZWAuXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICBpbmNsdWRlUGFyZW50OiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIGVsOiBFbGVtZW50UmVmLFxuICAgIHJuZDogUmVuZGVyZXIyXG4gICkge1xuICAgIHN1cGVyKGVsLCBybmQsICdmYi1jb21tZW50LWVtYmVkJyk7XG4gIH1cblxufVxuIl19