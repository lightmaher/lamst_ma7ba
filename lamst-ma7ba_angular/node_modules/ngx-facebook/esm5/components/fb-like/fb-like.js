import { __decorate, __extends } from "tslib";
import { Component, Input, ElementRef, Renderer2 } from '@angular/core';
import { FBMLAttribute, FBMLComponent } from '../fbml-component';
/**
 * @name Like Button
 * @shortdesc Like button component
 * @fbdoc https://developers.facebook.com/docs/plugins/like-button
 * @description
 * A single click on the Like button will 'like' pieces of content on the web and share them on Facebook.
 * You can also display a Share button next to the Like button to let people add a personal message and customize who they share with.
 * @usage
 * ```html
 * <fb-like href="https://www.facebook.com/zuck"></fb-like>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
var FBLikeComponent = /** @class */ (function (_super) {
    __extends(FBLikeComponent, _super);
    function FBLikeComponent(el, rnd) {
        var _this = _super.call(this, el, rnd, 'fb-like') || this;
        /**
         * The absolute URL of the page that will be liked.
         * Defaults to the current URL.
         */
        _this.href = window.location.href;
        return _this;
    }
    FBLikeComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input(),
        FBMLAttribute
    ], FBLikeComponent.prototype, "action", void 0);
    __decorate([
        Input(),
        FBMLAttribute
    ], FBLikeComponent.prototype, "colorScheme", void 0);
    __decorate([
        Input(),
        FBMLAttribute
    ], FBLikeComponent.prototype, "href", void 0);
    __decorate([
        Input(),
        FBMLAttribute
    ], FBLikeComponent.prototype, "kidDirectedSite", void 0);
    __decorate([
        Input(),
        FBMLAttribute
    ], FBLikeComponent.prototype, "layout", void 0);
    __decorate([
        Input(),
        FBMLAttribute
    ], FBLikeComponent.prototype, "ref", void 0);
    __decorate([
        Input(),
        FBMLAttribute
    ], FBLikeComponent.prototype, "share", void 0);
    __decorate([
        Input(),
        FBMLAttribute
    ], FBLikeComponent.prototype, "showFaces", void 0);
    __decorate([
        Input(),
        FBMLAttribute
    ], FBLikeComponent.prototype, "size", void 0);
    __decorate([
        Input(),
        FBMLAttribute
    ], FBLikeComponent.prototype, "width", void 0);
FBLikeComponent.ɵfac = function FBLikeComponent_Factory(t) { return new (t || FBLikeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
FBLikeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FBLikeComponent, selectors: [["fb-like"]], inputs: { action: "action", colorScheme: "colorScheme", href: "href", kidDirectedSite: "kidDirectedSite", layout: "layout", ref: "ref", share: "share", showFaces: "showFaces", size: "size", width: "width" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function FBLikeComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FBLikeComponent, [{
        type: Component,
        args: [{
                selector: 'fb-like',
                template: ''
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { action: [{
            type: Input
        }], colorScheme: [{
            type: Input
        }], href: [{
            type: Input
        }], kidDirectedSite: [{
            type: Input
        }], layout: [{
            type: Input
        }], ref: [{
            type: Input
        }], share: [{
            type: Input
        }], showFaces: [{
            type: Input
        }], size: [{
            type: Input
        }], width: [{
            type: Input
        }] }); })();
    return FBLikeComponent;
}(FBMLComponent));
export { FBLikeComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmItbGlrZS5qcyIsInNvdXJjZXMiOlsibmc6L25neC1mYWNlYm9vay9jb21wb25lbnRzL2ZiLWxpa2UvZmItbGlrZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4RSxPQUFPLEVBQUUsYUFBYSxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWpFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUtIO0FBRUcsSUFGa0MsbUNBQWE7QUFBQyxJQXNGakQseUJBQVksRUFBYyxFQUFFLEdBQWM7QUFDNUMsUUFERSxZQUNFLGtCQUFNLEVBQUUsRUFBRSxHQUFHLEVBQUUsU0FBUyxDQUFDLFNBQzFCO0FBQ0gsUUF2RUU7QUFDRjtBQUNNO0FBRUEsV0FERDtBQUNMLFFBRUUsVUFBSSxHQUFXLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDO0FBQ3RDO0FBRWUsSUE2RGIsQ0FBQztBQUNIO0FBRXlELGdCQUx2QyxVQUFVO0FBQUksZ0JBQUcsU0FBUztBQUFHO0FBQ3RDLElBL0VQO0FBQWEsUUFGWixLQUFLLEVBQUU7QUFDVCxRQUFFLGFBQWE7QUFDaEIsbURBQWlCO0FBRWpCLElBTUU7QUFBYSxRQUZaLEtBQUssRUFBRTtBQUNULFFBQUUsYUFBYTtBQUNoQix3REFBc0I7QUFFdEIsSUFNRTtBQUFhLFFBRlosS0FBSyxFQUFFO0FBQ1QsUUFBRSxhQUFhO0FBQ2hCLGlEQUFzQztBQUV0QyxJQU1FO0FBQWEsUUFGWixLQUFLLEVBQUU7QUFDVCxRQUFFLGFBQWE7QUFDaEIsNERBQTJCO0FBRTNCLElBUUU7QUFBYSxRQUZaLEtBQUssRUFBRTtBQUNULFFBQUUsYUFBYTtBQUNoQixtREFBaUI7QUFFakIsSUFNRTtBQUNGLFFBSEcsS0FBSyxFQUFFO0FBQ1QsUUFBRSxhQUFhO0FBQ2hCLGdEQUFjO0FBRWQsSUFPRTtBQUFhLFFBRlosS0FBSyxFQUFFO0FBQ1QsUUFBRSxhQUFhO0FBQ2hCLGtEQUFpQjtBQUVqQixJQU9FO0FBQWEsUUFGWixLQUFLLEVBQUU7QUFDVCxRQUFFLGFBQWE7QUFDaEIsc0RBQXFCO0FBRXJCLElBTUU7QUFBYSxRQUZaLEtBQUssRUFBRTtBQUNULFFBQUUsYUFBYTtBQUNoQixpREFBZTtBQUVmLElBTUU7QUFBYSxRQUZaLEtBQUssRUFBRTtBQUNULFFBQUUsYUFBYTtBQUNoQixrREFBZ0I7SUFwRkgsZUFBZSx3QkFKM0IsU0FBUyxDQUFDLGNBQ1QsUUFBUSxFQUFFLFNBQVMsY0FDbkIsUUFBUSxFQUFFLEVBQUUsVUFDYixDQUFDLFFBQ1csZUFBZSxDQTBGM0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQ0Q7QUFBQyxJQURELHNCQUFDO0FBQ0EsQ0FEQSxBQTFGRCxDQUFxQyxhQUFhLEdBMEZqRDtBQUNELFNBM0ZhLGVBQWU7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRkJNTEF0dHJpYnV0ZSwgRkJNTENvbXBvbmVudCB9IGZyb20gJy4uL2ZibWwtY29tcG9uZW50JztcblxuLyoqXG4gKiBAbmFtZSBMaWtlIEJ1dHRvblxuICogQHNob3J0ZGVzYyBMaWtlIGJ1dHRvbiBjb21wb25lbnRcbiAqIEBmYmRvYyBodHRwczovL2RldmVsb3BlcnMuZmFjZWJvb2suY29tL2RvY3MvcGx1Z2lucy9saWtlLWJ1dHRvblxuICogQGRlc2NyaXB0aW9uXG4gKiBBIHNpbmdsZSBjbGljayBvbiB0aGUgTGlrZSBidXR0b24gd2lsbCAnbGlrZScgcGllY2VzIG9mIGNvbnRlbnQgb24gdGhlIHdlYiBhbmQgc2hhcmUgdGhlbSBvbiBGYWNlYm9vay5cbiAqIFlvdSBjYW4gYWxzbyBkaXNwbGF5IGEgU2hhcmUgYnV0dG9uIG5leHQgdG8gdGhlIExpa2UgYnV0dG9uIHRvIGxldCBwZW9wbGUgYWRkIGEgcGVyc29uYWwgbWVzc2FnZSBhbmQgY3VzdG9taXplIHdobyB0aGV5IHNoYXJlIHdpdGguXG4gKiBAdXNhZ2VcbiAqIGBgYGh0bWxcbiAqIDxmYi1saWtlIGhyZWY9XCJodHRwczovL3d3dy5mYWNlYm9vay5jb20venVja1wiPjwvZmItbGlrZT5cbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmYi1saWtlJyxcbiAgdGVtcGxhdGU6ICcnXG59KVxuZXhwb3J0IGNsYXNzIEZCTGlrZUNvbXBvbmVudCBleHRlbmRzIEZCTUxDb21wb25lbnQge1xuXG4gIC8qKlxuICAgKiBUaGUgdmVyYiB0byBkaXNwbGF5IG9uIHRoZSBidXR0b24uIENhbiBiZSBlaXRoZXIgYGxpa2VgIG9yIGByZWNvbW1lbmRgLlxuICAgKiBEZWZhdWx0cyB0byBgbGlrZWAuXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICBhY3Rpb246IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIGNvbG9yIHNjaGVtZSB1c2VkIGJ5IHRoZSBwbHVnaW4gZm9yIGFueSB0ZXh0IG91dHNpZGUgb2YgdGhlIGJ1dHRvbiBpdHNlbGYuIENhbiBiZSBgbGlnaHRgIG9yIGBkYXJrYC5cbiAgICogRGVmYXVsdHMgdG8gYGxpZ2h0YC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIGNvbG9yU2NoZW1lOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBhYnNvbHV0ZSBVUkwgb2YgdGhlIHBhZ2UgdGhhdCB3aWxsIGJlIGxpa2VkLlxuICAgKiBEZWZhdWx0cyB0byB0aGUgY3VycmVudCBVUkwuXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICBocmVmOiBzdHJpbmcgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcblxuICAvKipcbiAgICogSWYgeW91ciB3ZWIgc2l0ZSBvciBvbmxpbmUgc2VydmljZSwgb3IgYSBwb3J0aW9uIG9mIHlvdXIgc2VydmljZSwgaXMgZGlyZWN0ZWQgdG8gY2hpbGRyZW4gdW5kZXIgMTMgW3lvdSBtdXN0IGVuYWJsZSB0aGlzXShodHRwczovL2RldmVsb3BlcnMuZmFjZWJvb2suY29tL2RvY3MvcGx1Z2lucy9yZXN0cmljdGlvbnMvKS5cbiAgICogRGVmYXVsdHMgdG8gYGZhbHNlYC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIGtpZERpcmVjdGVkU2l0ZTogYm9vbGVhbjtcblxuICAvKipcbiAgICogU2VsZWN0cyBvbmUgb2YgdGhlIGRpZmZlcmVudCBsYXlvdXRzIHRoYXQgYXJlIGF2YWlsYWJsZSBmb3IgdGhlIHBsdWdpbi5cbiAgICogQ2FuIGJlIG9uZSBvZiBgc3RhbmRhcmRgLCBgYnV0dG9uX2NvdW50YCwgYGJ1dHRvbmAgb3IgYGJveF9jb3VudGAuXG4gICAqIFNlZSB0aGUgW0ZBUV0oaHR0cHM6Ly9kZXZlbG9wZXJzLmZhY2Vib29rLmNvbS9kb2NzL3BsdWdpbnMvbGlrZS1idXR0b24jZmFxbGF5b3V0KSBmb3IgbW9yZSBkZXRhaWxzLlxuICAgKiBEZWZhdWx0cyB0byBgc3RhbmRhcmRgLlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgbGF5b3V0OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEEgbGFiZWwgZm9yIHRyYWNraW5nIHJlZmVycmFscyB3aGljaCBtdXN0IGJlIGxlc3MgdGhhbiA1MCBjaGFyYWN0ZXJzIGFuZCBjYW4gY29udGFpbiBhbHBoYW51bWVyaWMgY2hhcmFjdGVycyBhbmQgc29tZSBwdW5jdHVhdGlvbiAoY3VycmVudGx5ICsvPS0uOl8pLlxuICAgKiBTZWUgdGhlIFtGQVFdKGh0dHBzOi8vZGV2ZWxvcGVycy5mYWNlYm9vay5jb20vZG9jcy9wbHVnaW5zL2ZhcXMjcmVmKSBmb3IgbW9yZSBkZXRhaWxzLlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgcmVmOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFNwZWNpZmllcyB3aGV0aGVyIHRvIGluY2x1ZGUgYSBzaGFyZSBidXR0b24gYmVzaWRlIHRoZSBMaWtlIGJ1dHRvbi5cbiAgICogVGhpcyBvbmx5IHdvcmtzIHdpdGggdGhlIFhGQk1MIHZlcnNpb24uXG4gICAqIERlZmF1bHRzIHRvIGBmYWxzZWAuXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICBzaGFyZTogYm9vbGVhbjtcblxuICAvKipcbiAgICogU3BlY2lmaWVzIHdoZXRoZXIgdG8gZGlzcGxheSBwcm9maWxlIHBob3RvcyBiZWxvdyB0aGUgYnV0dG9uIChzdGFuZGFyZCBsYXlvdXQgb25seSkuXG4gICAqIFlvdSBtdXN0IG5vdCBlbmFibGUgdGhpcyBvbiBjaGlsZC1kaXJlY3RlZCBzaXRlcy5cbiAgICogRGVmYXVsdHMgdG8gYGZhbHNlYC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIHNob3dGYWNlczogYm9vbGVhbjtcblxuICAvKipcbiAgICogVGhlIGJ1dHRvbiBpcyBvZmZlcmVkIGluIDIgc2l6ZXMgaS5lLiBgbGFyZ2VgIGFuZCBgc21hbGxgLlxuICAgKiBEZWZhdWx0cyB0byBgc21hbGxgLlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgc2l6ZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgd2lkdGggb2YgdGhlIHBsdWdpbiAoc3RhbmRhcmQgbGF5b3V0IG9ubHkpLCB3aGljaCBpcyBzdWJqZWN0IHRvIHRoZSBtaW5pbXVtIGFuZCBkZWZhdWx0IHdpZHRoLlxuICAgKiBTZWUgW0xheW91dCBTZXR0aW5nc10oaHR0cHM6Ly9kZXZlbG9wZXJzLmZhY2Vib29rLmNvbS9kb2NzL3BsdWdpbnMvbGlrZS1idXR0b24jZmFxbGF5b3V0KSBpbiB0aGUgb2ZmaWNpYWwgZG9jcyBmb3IgbW9yZSBkZXRhaWxzLlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgd2lkdGg6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgcm5kOiBSZW5kZXJlcjIpIHtcbiAgICBzdXBlcihlbCwgcm5kLCAnZmItbGlrZScpO1xuICB9XG5cbn1cbiJdfQ==