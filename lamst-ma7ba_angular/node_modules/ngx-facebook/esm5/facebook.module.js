import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { FacebookService } from './providers/facebook';
import { FBCommentEmbedComponent } from './components/fb-comment-embed/fb-comment-embed';
import { FBCommentsComponent } from './components/fb-comments/fb-comments';
import { FBFollowComponent } from './components/fb-follow/fb-follow';
import { FBLikeComponent } from './components/fb-like/fb-like';
import { FBPageComponent } from './components/fb-page/fb-page';
import { FBPostComponent } from './components/fb-post/fb-post';
import { FBQuoteComponent } from './components/fb-quote/fb-quote';
import { FBSaveComponent } from './components/fb-save/fb-save';
import { FBSendComponent } from './components/fb-send/fb-send';
import { FBShareComponent } from './components/fb-share/fb-share';
import { FBVideoComponent } from './components/fb-video/fb-video';
import * as ɵngcc0 from '@angular/core';
var components = [
    FBCommentEmbedComponent,
    FBCommentsComponent,
    FBFollowComponent,
    FBLikeComponent,
    FBPageComponent,
    FBPostComponent,
    FBQuoteComponent,
    FBSaveComponent,
    FBSendComponent,
    FBShareComponent,
    FBVideoComponent
];
export function getComponents() {
    return components;
}
/**
 * @shortdesc The module to import to add this library
 * @description
 * The main module to import into your application.
 * You only need to import this module if you wish to use the components in this library; otherwise, you could just import [FacebookService](../facebook-service) into your module instead.
 * This module will make all components and providers available in your application.
 *
 * @usage
 * In order to use this library, you need to import `FacebookModule` into your app's main `NgModule`.
 *
 * ```typescript
 * import { FacebookModule } from 'ngx-facebook-sdk';
 *
 * @NgModule({
 *   ...
 *   imports: [
 *     ...
 *     FacebookModule.forRoot()
 *   ],
 *   ...
 * })
 * export class AppModule { }
 * ```
 */
var FacebookModule = /** @class */ (function () {
    function FacebookModule() {
    }
    FacebookModule_1 = FacebookModule;
    FacebookModule.forRoot = function () {
        return {
            ngModule: FacebookModule_1,
            providers: [FacebookService]
        };
    };
    var FacebookModule_1;
FacebookModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FacebookModule });
FacebookModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FacebookModule_Factory(t) { return new (t || FacebookModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FacebookModule, { declarations: [FBCommentEmbedComponent,
        FBCommentsComponent,
        FBFollowComponent,
        FBLikeComponent,
        FBPageComponent,
        FBPostComponent,
        FBQuoteComponent,
        FBSaveComponent,
        FBSendComponent,
        FBShareComponent,
        FBVideoComponent], exports: [FBCommentEmbedComponent,
        FBCommentsComponent,
        FBFollowComponent,
        FBLikeComponent,
        FBPageComponent,
        FBPostComponent,
        FBQuoteComponent,
        FBSaveComponent,
        FBSendComponent,
        FBShareComponent,
        FBVideoComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FacebookModule, [{
        type: NgModule,
        args: [{
                declarations: getComponents(),
                exports: getComponents()
            }]
    }], function () { return []; }, null); })();
    return FacebookModule;
}());
export { FacebookModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFjZWJvb2subW9kdWxlLmpzIiwic291cmNlcyI6WyJuZzovbmd4LWZhY2Vib29rL2ZhY2Vib29rLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRXZELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7O0FBRWxFLElBQU0sVUFBVSxHQUFVO0FBQzFCLElBQUUsdUJBQXVCO0FBQ3pCLElBQUUsbUJBQW1CO0FBQ3JCLElBQUUsaUJBQWlCO0FBQ25CLElBQUUsZUFBZTtBQUNqQixJQUFFLGVBQWU7QUFDakIsSUFBRSxlQUFlO0FBQ2pCLElBQUUsZ0JBQWdCO0FBQ2xCLElBQUUsZUFBZTtBQUNqQixJQUFFLGVBQWU7QUFDakIsSUFBRSxnQkFBZ0I7QUFDbEIsSUFBRSxnQkFBZ0I7QUFDbEIsQ0FBQyxDQUFDO0FBRUYsTUFBTSxVQUFVLGFBQWE7QUFDN0IsSUFBRSxPQUFPLFVBQVUsQ0FBQztBQUNwQixDQUFDO0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFLSDtBQUNvQixJQURwQjtBQUE0QixJQU81QixDQUFDO0FBQ0QsdUJBUmEsY0FBYztBQUFFLElBQ3BCLHNCQUFPLEdBQWQ7QUFBYyxRQUNaLE9BQU87QUFDWCxZQUFNLFFBQVEsRUFBRSxnQkFBYztBQUM5QixZQUFNLFNBQVMsRUFBRSxDQUFDLGVBQWUsQ0FBQztBQUNsQyxTQUFLLENBQUM7QUFDTixJQUFFLENBQUM7QUFDRjtJQVBZLGNBQWMsMkNBSjFCLFFBQVEsQ0FBQztXQUNSLFlBQVksRUFBRSxhQUFhLEVBQUUsY0FDN0IsT0FBTyxFQUFFLGFBQWEsRUFBRSxVQUN6QixDQUFDLFFBQ1csY0FBYyxDQU8xQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnREFDRDtBQUFDLElBREQscUJBQUM7QUFDQSxDQURBLEFBUEQsSUFPQztBQUNELFNBUmEsY0FBYztBQUMxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEZhY2Vib29rU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL2ZhY2Vib29rJztcblxuaW1wb3J0IHsgRkJDb21tZW50RW1iZWRDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZmItY29tbWVudC1lbWJlZC9mYi1jb21tZW50LWVtYmVkJztcbmltcG9ydCB7IEZCQ29tbWVudHNDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZmItY29tbWVudHMvZmItY29tbWVudHMnO1xuaW1wb3J0IHsgRkJGb2xsb3dDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZmItZm9sbG93L2ZiLWZvbGxvdyc7XG5pbXBvcnQgeyBGQkxpa2VDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZmItbGlrZS9mYi1saWtlJztcbmltcG9ydCB7IEZCUGFnZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9mYi1wYWdlL2ZiLXBhZ2UnO1xuaW1wb3J0IHsgRkJQb3N0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2ZiLXBvc3QvZmItcG9zdCc7XG5pbXBvcnQgeyBGQlF1b3RlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2ZiLXF1b3RlL2ZiLXF1b3RlJztcbmltcG9ydCB7IEZCU2F2ZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9mYi1zYXZlL2ZiLXNhdmUnO1xuaW1wb3J0IHsgRkJTZW5kQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2ZiLXNlbmQvZmItc2VuZCc7XG5pbXBvcnQgeyBGQlNoYXJlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2ZiLXNoYXJlL2ZiLXNoYXJlJztcbmltcG9ydCB7IEZCVmlkZW9Db21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZmItdmlkZW8vZmItdmlkZW8nO1xuXG5jb25zdCBjb21wb25lbnRzOiBhbnlbXSA9IFtcbiAgRkJDb21tZW50RW1iZWRDb21wb25lbnQsXG4gIEZCQ29tbWVudHNDb21wb25lbnQsXG4gIEZCRm9sbG93Q29tcG9uZW50LFxuICBGQkxpa2VDb21wb25lbnQsXG4gIEZCUGFnZUNvbXBvbmVudCxcbiAgRkJQb3N0Q29tcG9uZW50LFxuICBGQlF1b3RlQ29tcG9uZW50LFxuICBGQlNhdmVDb21wb25lbnQsXG4gIEZCU2VuZENvbXBvbmVudCxcbiAgRkJTaGFyZUNvbXBvbmVudCxcbiAgRkJWaWRlb0NvbXBvbmVudFxuXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbXBvbmVudHMoKSB7XG4gIHJldHVybiBjb21wb25lbnRzO1xufVxuXG4vKipcbiAqIEBzaG9ydGRlc2MgVGhlIG1vZHVsZSB0byBpbXBvcnQgdG8gYWRkIHRoaXMgbGlicmFyeVxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGUgbWFpbiBtb2R1bGUgdG8gaW1wb3J0IGludG8geW91ciBhcHBsaWNhdGlvbi5cbiAqIFlvdSBvbmx5IG5lZWQgdG8gaW1wb3J0IHRoaXMgbW9kdWxlIGlmIHlvdSB3aXNoIHRvIHVzZSB0aGUgY29tcG9uZW50cyBpbiB0aGlzIGxpYnJhcnk7IG90aGVyd2lzZSwgeW91IGNvdWxkIGp1c3QgaW1wb3J0IFtGYWNlYm9va1NlcnZpY2VdKC4uL2ZhY2Vib29rLXNlcnZpY2UpIGludG8geW91ciBtb2R1bGUgaW5zdGVhZC5cbiAqIFRoaXMgbW9kdWxlIHdpbGwgbWFrZSBhbGwgY29tcG9uZW50cyBhbmQgcHJvdmlkZXJzIGF2YWlsYWJsZSBpbiB5b3VyIGFwcGxpY2F0aW9uLlxuICpcbiAqIEB1c2FnZVxuICogSW4gb3JkZXIgdG8gdXNlIHRoaXMgbGlicmFyeSwgeW91IG5lZWQgdG8gaW1wb3J0IGBGYWNlYm9va01vZHVsZWAgaW50byB5b3VyIGFwcCdzIG1haW4gYE5nTW9kdWxlYC5cbiAqXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBGYWNlYm9va01vZHVsZSB9IGZyb20gJ25neC1mYWNlYm9vay1zZGsnO1xuICpcbiAqIEBOZ01vZHVsZSh7XG4gKiAgIC4uLlxuICogICBpbXBvcnRzOiBbXG4gKiAgICAgLi4uXG4gKiAgICAgRmFjZWJvb2tNb2R1bGUuZm9yUm9vdCgpXG4gKiAgIF0sXG4gKiAgIC4uLlxuICogfSlcbiAqIGV4cG9ydCBjbGFzcyBBcHBNb2R1bGUgeyB9XG4gKiBgYGBcbiAqL1xuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBnZXRDb21wb25lbnRzKCksXG4gIGV4cG9ydHM6IGdldENvbXBvbmVudHMoKVxufSlcbmV4cG9ydCBjbGFzcyBGYWNlYm9va01vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogRmFjZWJvb2tNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtGYWNlYm9va1NlcnZpY2VdXG4gICAgfTtcbiAgfVxufVxuIl19