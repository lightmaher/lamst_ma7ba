import { __decorate } from "tslib";
import { Component, Input, ElementRef, Renderer2 } from '@angular/core';
import { FBMLAttribute, FBMLComponent } from '../fbml-component';
/**
 * @name Embedded Comments
 * @shortdesc Embedded comments component
 * @fbdoc https://developers.facebook.com/docs/plugins/embedded-comments
 * @description
 * Embedded comments are a simple way to put public post comments - by a Page or a person on Facebook - into the content of your web site or web page.
 * Only public comments from Facebook Pages and profiles can be embedded.
 * @usage
 * ```html
 * <fb-comment-embed href="https://www.facebook.com/zuck/posts/10102735452532991?comment_id=1070233703036185" width="500"></fb-comment-embed>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
let FBCommentEmbedComponent = class FBCommentEmbedComponent extends FBMLComponent {
    constructor(el, rnd) {
        super(el, rnd, 'fb-comment-embed');
    }
};
FBCommentEmbedComponent.ɵfac = function FBCommentEmbedComponent_Factory(t) { return new (t || FBCommentEmbedComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
FBCommentEmbedComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FBCommentEmbedComponent, selectors: [["fb-comment-embed"]], inputs: { href: "href", width: "width", includeParent: "includeParent" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function FBCommentEmbedComponent_Template(rf, ctx) { }, encapsulation: 2 });
FBCommentEmbedComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
__decorate([
    Input(),
    FBMLAttribute
], FBCommentEmbedComponent.prototype, "href", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBCommentEmbedComponent.prototype, "width", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBCommentEmbedComponent.prototype, "includeParent", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FBCommentEmbedComponent, [{
        type: Component,
        args: [{
                selector: 'fb-comment-embed',
                template: ''
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { href: [{
            type: Input
        }], width: [{
            type: Input
        }], includeParent: [{
            type: Input
        }] }); })();
export { FBCommentEmbedComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmItY29tbWVudC1lbWJlZC5qcyIsInNvdXJjZXMiOlsibmc6L25neC1mYWNlYm9vay9jb21wb25lbnRzL2ZiLWNvbW1lbnQtZW1iZWQvZmItY29tbWVudC1lbWJlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4RSxPQUFPLEVBQUUsYUFBYSxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWpFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUtILElBQWEsdUJBQXVCLEdBQXBDLE1BQWEsdUJBQXdCLFNBQVEsYUFBYTtBQUMxRCxJQXNCRSxZQUNFLEVBQWMsRUFDZCxHQUFjO0FBQ2YsUUFDQyxLQUFLLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0FBQ3ZDLElBQUUsQ0FBQztBQUNILENBQ0M7OzhWQUFBO0FBQ0Q7QUFBaUQsWUFQekMsVUFBVTtBQUNoQixZQUFPLFNBQVM7QUFDaEI7QUFuQkE7QUFBYSxJQUZaLEtBQUssRUFBRTtBQUNULElBQUUsYUFBYTtBQUNoQixxREFBZTtBQU9iO0FBQWEsSUFGWixLQUFLLEVBQUU7QUFDVCxJQUFFLGFBQWE7QUFDaEIsc0RBQWdCO0FBT2Q7QUFBYSxJQUZaLEtBQUssRUFBRTtBQUNULElBQUUsYUFBYTtBQUNoQiw4REFBeUI7QUFyQlosdUJBQXVCLG9CQUpuQyxTQUFTLENBQUMsVUFDVCxRQUFRLEVBQUU7U0FBa0IsVUFDNUI7RUFBUSxFQUFFLEVBQUUsTUFDYixDQUFDO0FBQ1csdUJBQXVCLENBOEJuQzs7Ozs7Ozs7O29CQUNEO0FBQUMsU0EvQlksdUJBQXVCO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBFbGVtZW50UmVmLCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZCTUxBdHRyaWJ1dGUsIEZCTUxDb21wb25lbnQgfSBmcm9tICcuLi9mYm1sLWNvbXBvbmVudCc7XG5cbi8qKlxuICogQG5hbWUgRW1iZWRkZWQgQ29tbWVudHNcbiAqIEBzaG9ydGRlc2MgRW1iZWRkZWQgY29tbWVudHMgY29tcG9uZW50XG4gKiBAZmJkb2MgaHR0cHM6Ly9kZXZlbG9wZXJzLmZhY2Vib29rLmNvbS9kb2NzL3BsdWdpbnMvZW1iZWRkZWQtY29tbWVudHNcbiAqIEBkZXNjcmlwdGlvblxuICogRW1iZWRkZWQgY29tbWVudHMgYXJlIGEgc2ltcGxlIHdheSB0byBwdXQgcHVibGljIHBvc3QgY29tbWVudHMgLSBieSBhIFBhZ2Ugb3IgYSBwZXJzb24gb24gRmFjZWJvb2sgLSBpbnRvIHRoZSBjb250ZW50IG9mIHlvdXIgd2ViIHNpdGUgb3Igd2ViIHBhZ2UuXG4gKiBPbmx5IHB1YmxpYyBjb21tZW50cyBmcm9tIEZhY2Vib29rIFBhZ2VzIGFuZCBwcm9maWxlcyBjYW4gYmUgZW1iZWRkZWQuXG4gKiBAdXNhZ2VcbiAqIGBgYGh0bWxcbiAqIDxmYi1jb21tZW50LWVtYmVkIGhyZWY9XCJodHRwczovL3d3dy5mYWNlYm9vay5jb20venVjay9wb3N0cy8xMDEwMjczNTQ1MjUzMjk5MT9jb21tZW50X2lkPTEwNzAyMzM3MDMwMzYxODVcIiB3aWR0aD1cIjUwMFwiPjwvZmItY29tbWVudC1lbWJlZD5cbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmYi1jb21tZW50LWVtYmVkJyxcbiAgdGVtcGxhdGU6ICcnXG59KVxuZXhwb3J0IGNsYXNzIEZCQ29tbWVudEVtYmVkQ29tcG9uZW50IGV4dGVuZHMgRkJNTENvbXBvbmVudCB7XG5cbiAgLyoqXG4gICAqIFRoZSBhYnNvbHV0ZSBVUkwgb2YgdGhlIGNvbW1lbnQuXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICBocmVmOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSB3aWR0aCBvZiB0aGUgZW1iZWRkZWQgY29tbWVudCBjb250YWluZXIuIE1pbi4gYDIyMHB4YC4gRGVmYXVsdHMgdG8gYDU2MHB4YC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIHdpZHRoOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFNldCB0byBgdHJ1ZWAgdG8gaW5jbHVkZSBwYXJlbnQgY29tbWVudCAoaWYgVVJMIGlzIGEgcmVwbHkpLiBEZWZhdWx0cyB0byBgZmFsc2VgLlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgaW5jbHVkZVBhcmVudDogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBlbDogRWxlbWVudFJlZixcbiAgICBybmQ6IFJlbmRlcmVyMlxuICApIHtcbiAgICBzdXBlcihlbCwgcm5kLCAnZmItY29tbWVudC1lbWJlZCcpO1xuICB9XG5cbn1cbiJdfQ==