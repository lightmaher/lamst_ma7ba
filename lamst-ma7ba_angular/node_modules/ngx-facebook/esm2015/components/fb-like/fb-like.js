import { __decorate } from "tslib";
import { Component, Input, ElementRef, Renderer2 } from '@angular/core';
import { FBMLAttribute, FBMLComponent } from '../fbml-component';
/**
 * @name Like Button
 * @shortdesc Like button component
 * @fbdoc https://developers.facebook.com/docs/plugins/like-button
 * @description
 * A single click on the Like button will 'like' pieces of content on the web and share them on Facebook.
 * You can also display a Share button next to the Like button to let people add a personal message and customize who they share with.
 * @usage
 * ```html
 * <fb-like href="https://www.facebook.com/zuck"></fb-like>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
let FBLikeComponent = class FBLikeComponent extends FBMLComponent {
    constructor(el, rnd) {
        super(el, rnd, 'fb-like');
        /**
         * The absolute URL of the page that will be liked.
         * Defaults to the current URL.
         */
        this.href = window.location.href;
    }
};
FBLikeComponent.ɵfac = function FBLikeComponent_Factory(t) { return new (t || FBLikeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
FBLikeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FBLikeComponent, selectors: [["fb-like"]], inputs: { href: "href", action: "action", colorScheme: "colorScheme", kidDirectedSite: "kidDirectedSite", layout: "layout", ref: "ref", share: "share", showFaces: "showFaces", size: "size", width: "width" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function FBLikeComponent_Template(rf, ctx) { }, encapsulation: 2 });
FBLikeComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
__decorate([
    Input(),
    FBMLAttribute
], FBLikeComponent.prototype, "action", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBLikeComponent.prototype, "colorScheme", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBLikeComponent.prototype, "href", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBLikeComponent.prototype, "kidDirectedSite", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBLikeComponent.prototype, "layout", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBLikeComponent.prototype, "ref", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBLikeComponent.prototype, "share", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBLikeComponent.prototype, "showFaces", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBLikeComponent.prototype, "size", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBLikeComponent.prototype, "width", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FBLikeComponent, [{
        type: Component,
        args: [{
                selector: 'fb-like',
                template: ''
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { href: [{
            type: Input
        }], action: [{
            type: Input
        }], colorScheme: [{
            type: Input
        }], kidDirectedSite: [{
            type: Input
        }], layout: [{
            type: Input
        }], ref: [{
            type: Input
        }], share: [{
            type: Input
        }], showFaces: [{
            type: Input
        }], size: [{
            type: Input
        }], width: [{
            type: Input
        }] }); })();
export { FBLikeComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmItbGlrZS5qcyIsInNvdXJjZXMiOlsibmc6L25neC1mYWNlYm9vay9jb21wb25lbnRzL2ZiLWxpa2UvZmItbGlrZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4RSxPQUFPLEVBQUUsYUFBYSxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWpFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUtILElBQWEsZUFBZSxHQUE1QixNQUFhLGVBQWdCLFNBQVEsYUFBYTtBQUNsRCxJQXFGRSxZQUFZLEVBQWMsRUFBRSxHQUFjO0FBQzVDLFFBQUksS0FBSyxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDOUIsUUF0RUU7QUFDRjtBQUNNO0FBRUEsV0FERDtBQUNMLFFBRUUsU0FBSSxHQUFXLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDO0FBQ3RDLElBK0RFLENBQUM7QUFDSCxDQUNDOzttY0FBQTtBQUNEO0FBQXlDLFlBTHZCLFVBQVU7QUFBSSxZQUFHLFNBQVM7QUFBRztBQTlFN0M7QUFBYSxJQUZaLEtBQUssRUFBRTtBQUNULElBQUUsYUFBYTtBQUNoQiwrQ0FBaUI7QUFRZjtBQUFhLElBRlosS0FBSyxFQUFFO0FBQ1QsSUFBRSxhQUFhO0FBQ2hCLG9EQUFzQjtBQVFwQjtBQUFhLElBRlosS0FBSyxFQUFFO0FBQ1QsSUFBRSxhQUFhO0FBQ2hCLDZDQUFzQztBQVFwQztBQUFhLElBRlosS0FBSyxFQUFFO0FBQ1QsSUFBRSxhQUFhO0FBQ2hCLHdEQUEyQjtBQVV6QjtBQUFhLElBRlosS0FBSyxFQUFFO0FBQ1QsSUFBRSxhQUFhO0FBQ2hCLCtDQUFpQjtBQVFmO0FBQ0YsSUFIRyxLQUFLLEVBQUU7QUFDVCxJQUFFLGFBQWE7QUFDaEIsNENBQWM7QUFTWjtBQUFhLElBRlosS0FBSyxFQUFFO0FBQ1QsSUFBRSxhQUFhO0FBQ2hCLDhDQUFpQjtBQVNmO0FBQWEsSUFGWixLQUFLLEVBQUU7QUFDVCxJQUFFLGFBQWE7QUFDaEIsa0RBQXFCO0FBUW5CO0FBQWEsSUFGWixLQUFLLEVBQUU7QUFDVCxJQUFFLGFBQWE7QUFDaEIsNkNBQWU7QUFRYjtBQUFhLElBRlosS0FBSyxFQUFFO0FBQ1QsSUFBRSxhQUFhO0FBQ2hCLDhDQUFnQjtBQXBGSCxlQUFlLG9CQUozQixTQUFTLENBQUMsVUFDVCxRQUFRLEVBQUU7QUFBUyxVQUNuQixRQUFRLEVBQUUsRUFBRTtHQUNiLENBQUMsSUFDVztNQUFlLENBMEYzQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQ0Q7QUFBQyxTQTNGWSxlQUFlO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBFbGVtZW50UmVmLCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZCTUxBdHRyaWJ1dGUsIEZCTUxDb21wb25lbnQgfSBmcm9tICcuLi9mYm1sLWNvbXBvbmVudCc7XG5cbi8qKlxuICogQG5hbWUgTGlrZSBCdXR0b25cbiAqIEBzaG9ydGRlc2MgTGlrZSBidXR0b24gY29tcG9uZW50XG4gKiBAZmJkb2MgaHR0cHM6Ly9kZXZlbG9wZXJzLmZhY2Vib29rLmNvbS9kb2NzL3BsdWdpbnMvbGlrZS1idXR0b25cbiAqIEBkZXNjcmlwdGlvblxuICogQSBzaW5nbGUgY2xpY2sgb24gdGhlIExpa2UgYnV0dG9uIHdpbGwgJ2xpa2UnIHBpZWNlcyBvZiBjb250ZW50IG9uIHRoZSB3ZWIgYW5kIHNoYXJlIHRoZW0gb24gRmFjZWJvb2suXG4gKiBZb3UgY2FuIGFsc28gZGlzcGxheSBhIFNoYXJlIGJ1dHRvbiBuZXh0IHRvIHRoZSBMaWtlIGJ1dHRvbiB0byBsZXQgcGVvcGxlIGFkZCBhIHBlcnNvbmFsIG1lc3NhZ2UgYW5kIGN1c3RvbWl6ZSB3aG8gdGhleSBzaGFyZSB3aXRoLlxuICogQHVzYWdlXG4gKiBgYGBodG1sXG4gKiA8ZmItbGlrZSBocmVmPVwiaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3p1Y2tcIj48L2ZiLWxpa2U+XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZmItbGlrZScsXG4gIHRlbXBsYXRlOiAnJ1xufSlcbmV4cG9ydCBjbGFzcyBGQkxpa2VDb21wb25lbnQgZXh0ZW5kcyBGQk1MQ29tcG9uZW50IHtcblxuICAvKipcbiAgICogVGhlIHZlcmIgdG8gZGlzcGxheSBvbiB0aGUgYnV0dG9uLiBDYW4gYmUgZWl0aGVyIGBsaWtlYCBvciBgcmVjb21tZW5kYC5cbiAgICogRGVmYXVsdHMgdG8gYGxpa2VgLlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgYWN0aW9uOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBjb2xvciBzY2hlbWUgdXNlZCBieSB0aGUgcGx1Z2luIGZvciBhbnkgdGV4dCBvdXRzaWRlIG9mIHRoZSBidXR0b24gaXRzZWxmLiBDYW4gYmUgYGxpZ2h0YCBvciBgZGFya2AuXG4gICAqIERlZmF1bHRzIHRvIGBsaWdodGAuXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICBjb2xvclNjaGVtZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgYWJzb2x1dGUgVVJMIG9mIHRoZSBwYWdlIHRoYXQgd2lsbCBiZSBsaWtlZC5cbiAgICogRGVmYXVsdHMgdG8gdGhlIGN1cnJlbnQgVVJMLlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgaHJlZjogc3RyaW5nID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG5cbiAgLyoqXG4gICAqIElmIHlvdXIgd2ViIHNpdGUgb3Igb25saW5lIHNlcnZpY2UsIG9yIGEgcG9ydGlvbiBvZiB5b3VyIHNlcnZpY2UsIGlzIGRpcmVjdGVkIHRvIGNoaWxkcmVuIHVuZGVyIDEzIFt5b3UgbXVzdCBlbmFibGUgdGhpc10oaHR0cHM6Ly9kZXZlbG9wZXJzLmZhY2Vib29rLmNvbS9kb2NzL3BsdWdpbnMvcmVzdHJpY3Rpb25zLykuXG4gICAqIERlZmF1bHRzIHRvIGBmYWxzZWAuXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICBraWREaXJlY3RlZFNpdGU6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFNlbGVjdHMgb25lIG9mIHRoZSBkaWZmZXJlbnQgbGF5b3V0cyB0aGF0IGFyZSBhdmFpbGFibGUgZm9yIHRoZSBwbHVnaW4uXG4gICAqIENhbiBiZSBvbmUgb2YgYHN0YW5kYXJkYCwgYGJ1dHRvbl9jb3VudGAsIGBidXR0b25gIG9yIGBib3hfY291bnRgLlxuICAgKiBTZWUgdGhlIFtGQVFdKGh0dHBzOi8vZGV2ZWxvcGVycy5mYWNlYm9vay5jb20vZG9jcy9wbHVnaW5zL2xpa2UtYnV0dG9uI2ZhcWxheW91dCkgZm9yIG1vcmUgZGV0YWlscy5cbiAgICogRGVmYXVsdHMgdG8gYHN0YW5kYXJkYC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIGxheW91dDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBBIGxhYmVsIGZvciB0cmFja2luZyByZWZlcnJhbHMgd2hpY2ggbXVzdCBiZSBsZXNzIHRoYW4gNTAgY2hhcmFjdGVycyBhbmQgY2FuIGNvbnRhaW4gYWxwaGFudW1lcmljIGNoYXJhY3RlcnMgYW5kIHNvbWUgcHVuY3R1YXRpb24gKGN1cnJlbnRseSArLz0tLjpfKS5cbiAgICogU2VlIHRoZSBbRkFRXShodHRwczovL2RldmVsb3BlcnMuZmFjZWJvb2suY29tL2RvY3MvcGx1Z2lucy9mYXFzI3JlZikgZm9yIG1vcmUgZGV0YWlscy5cbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIHJlZjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBTcGVjaWZpZXMgd2hldGhlciB0byBpbmNsdWRlIGEgc2hhcmUgYnV0dG9uIGJlc2lkZSB0aGUgTGlrZSBidXR0b24uXG4gICAqIFRoaXMgb25seSB3b3JrcyB3aXRoIHRoZSBYRkJNTCB2ZXJzaW9uLlxuICAgKiBEZWZhdWx0cyB0byBgZmFsc2VgLlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgc2hhcmU6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFNwZWNpZmllcyB3aGV0aGVyIHRvIGRpc3BsYXkgcHJvZmlsZSBwaG90b3MgYmVsb3cgdGhlIGJ1dHRvbiAoc3RhbmRhcmQgbGF5b3V0IG9ubHkpLlxuICAgKiBZb3UgbXVzdCBub3QgZW5hYmxlIHRoaXMgb24gY2hpbGQtZGlyZWN0ZWQgc2l0ZXMuXG4gICAqIERlZmF1bHRzIHRvIGBmYWxzZWAuXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICBzaG93RmFjZXM6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFRoZSBidXR0b24gaXMgb2ZmZXJlZCBpbiAyIHNpemVzIGkuZS4gYGxhcmdlYCBhbmQgYHNtYWxsYC5cbiAgICogRGVmYXVsdHMgdG8gYHNtYWxsYC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIHNpemU6IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHdpZHRoIG9mIHRoZSBwbHVnaW4gKHN0YW5kYXJkIGxheW91dCBvbmx5KSwgd2hpY2ggaXMgc3ViamVjdCB0byB0aGUgbWluaW11bSBhbmQgZGVmYXVsdCB3aWR0aC5cbiAgICogU2VlIFtMYXlvdXQgU2V0dGluZ3NdKGh0dHBzOi8vZGV2ZWxvcGVycy5mYWNlYm9vay5jb20vZG9jcy9wbHVnaW5zL2xpa2UtYnV0dG9uI2ZhcWxheW91dCkgaW4gdGhlIG9mZmljaWFsIGRvY3MgZm9yIG1vcmUgZGV0YWlscy5cbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIHdpZHRoOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIHJuZDogUmVuZGVyZXIyKSB7XG4gICAgc3VwZXIoZWwsIHJuZCwgJ2ZiLWxpa2UnKTtcbiAgfVxuXG59XG4iXX0=