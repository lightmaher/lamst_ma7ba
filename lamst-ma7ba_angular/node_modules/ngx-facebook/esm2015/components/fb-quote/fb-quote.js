import { __decorate } from "tslib";
import { Component, Input, ElementRef, Renderer2 } from '@angular/core';
import { FBMLAttribute, FBMLComponent } from '../fbml-component';
/**
 * @name Quote Plugin
 * @shortdesc Quote plugin component
 * @fbdoc https://developers.facebook.com/docs/plugins/quote
 * @description
 * The quote plugin lets people select text on your page and add it to their share, so they can tell a more expressive story.
 * Note that you do not need to implement Facebook login or request any additional permissions through app review in order to use this plugin.
 * @usage
 * ```html
 * <fb-quote></fb-quote>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
let FBQuoteComponent = class FBQuoteComponent extends FBMLComponent {
    constructor(el, rnd) {
        super(el, rnd, 'fb-quote');
    }
};
FBQuoteComponent.ɵfac = function FBQuoteComponent_Factory(t) { return new (t || FBQuoteComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
FBQuoteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FBQuoteComponent, selectors: [["fb-quote"]], inputs: { href: "href", layout: "layout" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function FBQuoteComponent_Template(rf, ctx) { }, encapsulation: 2 });
FBQuoteComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
__decorate([
    Input(),
    FBMLAttribute
], FBQuoteComponent.prototype, "href", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBQuoteComponent.prototype, "layout", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FBQuoteComponent, [{
        type: Component,
        args: [{
                selector: 'fb-quote',
                template: ''
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { href: [{
            type: Input
        }], layout: [{
            type: Input
        }] }); })();
export { FBQuoteComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmItcXVvdGUuanMiLCJzb3VyY2VzIjpbIm5nOi9uZ3gtZmFjZWJvb2svY29tcG9uZW50cy9mYi1xdW90ZS9mYi1xdW90ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4RSxPQUFPLEVBQUUsYUFBYSxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWpFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUtILElBQWEsZ0JBQWdCLEdBQTdCLE1BQWEsZ0JBQWlCLFNBQVEsYUFBYTtBQUNuRCxJQWdCRSxZQUNFLEVBQWMsRUFDZCxHQUFjO0FBQ2YsUUFDQyxLQUFLLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxVQUFVLENBQUMsQ0FBQztBQUMvQixJQUFFLENBQUM7QUFDSCxDQUNDOzttU0FBQTtBQUNEO0FBQTBDLFlBUGxDLFVBQVU7QUFDaEIsWUFBTyxTQUFTO0FBQ2hCO0FBWkE7QUFBYSxJQUZaLEtBQUssRUFBRTtBQUNULElBQUUsYUFBYTtBQUNoQiw4Q0FBZTtBQU9iO0FBQWEsSUFGWixLQUFLLEVBQUU7QUFDVCxJQUFFLGFBQWE7QUFDaEIsZ0RBQWlCO0FBZkosZ0JBQWdCLG9CQUo1QixTQUFTLENBQUMsVUFDVCxRQUFRLEVBQUU7Q0FBVSxVQUNwQixRQUFRLEVBQUUsRUFBRTtJQUNiLENBQUMsSUFDVztRQUFnQixDQXdCNUI7Ozs7Ozs7b0JBQ0Q7QUFBQyxTQXpCWSxnQkFBZ0I7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRkJNTEF0dHJpYnV0ZSwgRkJNTENvbXBvbmVudCB9IGZyb20gJy4uL2ZibWwtY29tcG9uZW50JztcblxuLyoqXG4gKiBAbmFtZSBRdW90ZSBQbHVnaW5cbiAqIEBzaG9ydGRlc2MgUXVvdGUgcGx1Z2luIGNvbXBvbmVudFxuICogQGZiZG9jIGh0dHBzOi8vZGV2ZWxvcGVycy5mYWNlYm9vay5jb20vZG9jcy9wbHVnaW5zL3F1b3RlXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoZSBxdW90ZSBwbHVnaW4gbGV0cyBwZW9wbGUgc2VsZWN0IHRleHQgb24geW91ciBwYWdlIGFuZCBhZGQgaXQgdG8gdGhlaXIgc2hhcmUsIHNvIHRoZXkgY2FuIHRlbGwgYSBtb3JlIGV4cHJlc3NpdmUgc3RvcnkuXG4gKiBOb3RlIHRoYXQgeW91IGRvIG5vdCBuZWVkIHRvIGltcGxlbWVudCBGYWNlYm9vayBsb2dpbiBvciByZXF1ZXN0IGFueSBhZGRpdGlvbmFsIHBlcm1pc3Npb25zIHRocm91Z2ggYXBwIHJldmlldyBpbiBvcmRlciB0byB1c2UgdGhpcyBwbHVnaW4uXG4gKiBAdXNhZ2VcbiAqIGBgYGh0bWxcbiAqIDxmYi1xdW90ZT48L2ZiLXF1b3RlPlxuICogYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2ZiLXF1b3RlJyxcbiAgdGVtcGxhdGU6ICcnXG59KVxuZXhwb3J0IGNsYXNzIEZCUXVvdGVDb21wb25lbnQgZXh0ZW5kcyBGQk1MQ29tcG9uZW50IHtcblxuICAvKipcbiAgICogVGhlIGFic29sdXRlIFVSTCBvZiB0aGUgcGFnZSB0aGF0IHdpbGwgYmUgcXVvdGVkLlxuICAgKiBEZWZhdWx0cyB0byB0aGUgY3VycmVudCBVUkxcbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIGhyZWY6IHN0cmluZztcblxuICAvKipcbiAgICogQ2FuIGJlIHNldCB0byBxdW90ZSBvciBidXR0b24uIERlZmF1bHRzIHRvIHF1b3RlLlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgbGF5b3V0OiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgZWw6IEVsZW1lbnRSZWYsXG4gICAgcm5kOiBSZW5kZXJlcjJcbiAgKSB7XG4gICAgc3VwZXIoZWwsIHJuZCwgJ2ZiLXF1b3RlJyk7XG4gIH1cblxufVxuIl19